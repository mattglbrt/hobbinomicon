---
// Assets
import { Image } from "astro:assets";
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/fundations/elements/Text.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
// Content
import { getCollection } from "astro:content";
const pageTitle = "Tag Index";
// Get all posts
const allPodcasts = await getCollection("podcast");
// Extract tags from all posts and count occurrences
const tagCounts = allPodcasts.reduce((acc, post) => {
  post.data.tags.forEach((tag) => {
    acc[tag] = (acc[tag] || 0) + 1; // Count each tag per post
  });
  return acc;
}, {});
// Extract unique tags for display
const tags = Object.keys(tagCounts);
// Function to get the image for a specific tag
function getTagImage(tag) {
  const filteredPosts = allPodcasts.filter((post) => post.data.tags.includes(tag));
  if (filteredPosts.length > 0) {
    return filteredPosts[0].data.image.url; // Return the image of the first post with that tag
  }
}
---

<BaseLayout pageTitle={pageTitle}>
  <section>
    <Wrapper variant="standard" class="py-12">
      <Text
        tag="h2"
        variant="textXS"
        class="text-base-900 uppercase font-medium">All tags</Text
      >
      <div
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 relative before:absolute after:absolute before:bg-base-950 after:bg-base-950/10 before:top-0 before:left-0 before:h-px before:w-6 after:top-0 after:right-0 after:left-8 after:h-px pt-4 mt-2"
      >
        {
          tags.map((tag) => (
            <div class="relative flex flex-col group">
              <a href={`/podcast/tags/${tag}`} class="absolute inset-0 z-10" />
              {/* Display the image next to the tag */}
              <Image
                width={800}
                height={800}
                src={getTagImage(tag)}
                alt={`${tag} icon`}
                class="object-cover w-full aspect-12/8 rounded-xl"
              />
              <div class="mt-2">
                <Text
                  tag="h3"
                  variant="textBase"
                  class="flex items-start capitalize font-medium justify-between gap-4 mt-1 text-base-900 group-hover:underline font-display"
                >
                  {tag}
                  <Text tag="span" variant="textXS" class="text-base-500">
                    ({tagCounts[tag]})
                  </Text>
                </Text>
              </div>
            </div>
          ))
        }
      </div>
    </Wrapper>
  </section>
</BaseLayout>
