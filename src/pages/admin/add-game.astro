---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { supabase } from "../../lib/supabase";

const { data: { session } } = await supabase.auth.getSession();
if (!session) {
  throw Astro.redirect('/admin/login');
}
---

<BaseLayout>
  <section class="max-w-4xl mx-auto py-12">
    <h1 class="text-4xl font-bold mb-8">Add New Game</h1>

    <form id="add-game-form" class="space-y-6">
      <input type="text" name="title" placeholder="Title" required class="input" />
      <input type="text" name="slug" placeholder="Slug (optional)" class="input" />
      <textarea name="description" placeholder="Description" class="input"></textarea>
      <input type="text" name="genre" placeholder="Genre" class="input" />
      <input type="text" name="tags" placeholder="Tags (comma separated)" class="input" />

      <button type="submit" class="bg-green-600 text-white px-6 py-2 rounded">Save Game</button>
    </form>

    <script type="module">
      import { supabase } from "../../lib/supabase";

      const form = document.getElementById('add-game-form') as HTMLFormElement;

      form.addEventListener('submit', async (e: SubmitEvent) => {
        e.preventDefault();
        const formData = new FormData(form);

        const newGame = {
          title: formData.get('title'),
          slug: formData.get('slug') || formData.get('title')?.toString().toLowerCase().replace(/\s+/g, "-"),
          description: formData.get('description'),
          genre: formData.get('genre'),
          tags: formData.get('tags')?.toString().split(",").map(t => t.trim()),
        };

        const { error } = await supabase.from('games').insert([newGame]);

        if (error) {
          alert("‚ùå Error saving: " + error.message);
        } else {
          window.location.href = "/admin/games";
        }
      });

      async function handleLogout() {
        await supabase.auth.signOut();
        window.location.href = '/admin/login';
      }
    </script>
  </section>
</BaseLayout>
