---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { supabase } from "../../lib/supabase";

let status = "";

async function handleSubmit(event) {
  event.preventDefault();
  const formData = new FormData(event.target);

  const game = {
    title: formData.get("title"),
    slug: formData.get("slug") || formData.get("title").toLowerCase().replace(/\s+/g, "-"),
    tagline: formData.get("tagline"),
    description: formData.get("description"),
    genre: formData.get("genre"),
    tone: formData.get("tone"),
    how_to_play: formData.get("how_to_play"),
    key_features: formData.get("key_features").split(",").map(f => f.trim()).filter(Boolean),
    difficulty_to_learn: formData.get("difficulty_to_learn"),
    difficulty_to_master: formData.get("difficulty_to_master"),
    publication_year: parseInt(formData.get("publication_year")),
    min_players: parseInt(formData.get("min_players")),
    max_players: parseInt(formData.get("max_players")),
    play_time: formData.get("play_time"),
    age_range: formData.get("age_range"),
    solo_mode: formData.get("solo_mode") === "on",
    organized_play: formData.get("organized_play") === "on",
    online_play: formData.get("online_play") === "on",
    official_website: formData.get("official_website"),
    rules_url: formData.get("rules_url"),
    featured_image_url: formData.get("featured_image_url"),
    gallery: formData.get("gallery").split(",").map(url => url.trim()).filter(Boolean),
    video_url: formData.get("video_url"),
    community_links: formData.get("community_links").split(",").map(url => url.trim()).filter(Boolean),
    price_range: formData.get("price_range"),
    where_to_buy: formData.get("where_to_buy").split(",").map(url => url.trim()).filter(Boolean),
    social_links: formData.get("social_links").split(",").map(url => url.trim()).filter(Boolean),
    tags: formData.get("tags").split(",").map(tag => tag.trim()).filter(Boolean),
  };

  const { data, error } = await supabase.from("games").insert([game]);
  if (error) {
    status = "error";
    console.error(error);
  } else {
    await saveTags(game.tags);
    status = "success";
  }
}

async function saveTags(tagsArray) {
  if (!tagsArray || tagsArray.length === 0) return;
  for (const tag of tagsArray) {
    const slug = tag.toLowerCase().replace(/\s+/g, "-");
    await supabase.from("tags").upsert([{ name: tag, slug }], { onConflict: "slug" });
  }
}
---

<BaseLayout>
  <section class="max-w-3xl mx-auto py-12">
    <h1 class="text-3xl font-bold mb-6">Add New Game</h1>
    <form on:submit={handleSubmit} class="space-y-6">

      <!-- BASIC INFO -->
      <input type="text" name="title" placeholder="Game Title" required class="input" />
      <input type="text" name="slug" placeholder="Slug (optional)" class="input" />
      <input type="text" name="tagline" placeholder="Short Tagline" class="input" />
      <textarea name="description" placeholder="Full Description" required class="input"></textarea>

      <!-- GAME DETAILS -->
      <input type="text" name="genre" placeholder="Genre (e.g., Skirmish, RPG)" class="input" />
      <input type="text" name="tone" placeholder="Tone (e.g., Grimdark, Lighthearted)" class="input" />
      <textarea name="how_to_play" placeholder="How does it play?" class="input"></textarea>
      <input type="text" name="key_features" placeholder="Key Features (comma separated)" class="input" />
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label class="block mb-1 font-medium">Difficulty to Learn</label>
          <select name="difficulty_to_learn" class="input">
            <option value="">Select</option>
            <option>Very Easy</option>
            <option>Easy</option>
            <option>Medium</option>
            <option>Hard</option>
            <option>Very Hard</option>
          </select>
        </div>
        <div>
          <label class="block mb-1 font-medium">Difficulty to Master</label>
          <select name="difficulty_to_master" class="input">
            <option value="">Select</option>
            <option>Very Easy</option>
            <option>Easy</option>
            <option>Medium</option>
            <option>Hard</option>
            <option>Very Hard</option>
          </select>
        </div>
      </div>

      <!-- PLAYER DETAILS -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        <input type="number" name="min_players" placeholder="Min Players" class="input" />
        <input type="number" name="max_players" placeholder="Max Players" class="input" />
        <input type="text" name="play_time" placeholder="Play Time (e.g., 45–60 min)" class="input" />
      </div>

      <input type="text" name="age_range" placeholder="Recommended Age (e.g., 14+)" class="input" />
      <input type="number" name="publication_year" placeholder="Publication Year" class="input" />

      <!-- FEATURES CHECKBOXES -->
      <div class="flex flex-wrap gap-6">
        <label><input type="checkbox" name="solo_mode" /> Supports Solo Play</label>
        <label><input type="checkbox" name="organized_play" /> Supports Organized Play</label>
        <label><input type="checkbox" name="online_play" /> Supports Online Play</label>
      </div>

      <!-- LINKS & MEDIA -->
      <input type="url" name="official_website" placeholder="Official Website URL" class="input" />
      <input type="url" name="rules_url" placeholder="Rulebook URL" class="input" />
      <input type="url" name="featured_image_url" placeholder="Featured Image URL" class="input" />
      <input type="url" name="video_url" placeholder="Video URL (optional)" class="input" />
      <textarea name="gallery" placeholder="Gallery Image URLs (comma separated)" class="input"></textarea>

      <!-- COMMUNITY & STORE -->
      <textarea name="community_links" placeholder="Community Links (comma separated)" class="input"></textarea>
      <input type="text" name="price_range" placeholder="Price Range (e.g., $50–$75)" class="input" />
      <textarea name="where_to_buy" placeholder="Where to Buy Links (comma separated)" class="input"></textarea>
      <textarea name="social_links" placeholder="Social Media Links (comma separated)" class="input"></textarea>

      <!-- TAGS -->
      <input type="text" name="tags" placeholder="Tags (comma separated)" class="input" />

      <!-- SUBMIT -->
      <button type="submit" class="bg-red-600 text-white px-6 py-2 rounded">Save Game</button>

      {status === "success" && <p class="text-green-600 mt-4">✅ Game saved successfully!</p>}
      {status === "error" && <p class="text-red-600 mt-4">❌ Error saving game.</p>}
    </form>
  </section>
</BaseLayout>
