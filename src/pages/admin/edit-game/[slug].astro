---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { supabase } from "../../../lib/supabase";
import "../../../styles/global.css";

export async function getStaticPaths() {
  const { data: games, error } = await supabase
    .from('games')
    .select('slug');

  if (error) {
    console.error('Error fetching slugs:', error.message);
    return [];
  }

  return games.map(game => ({
    params: { slug: game.slug },
  }));
}

const { slug } = Astro.params;

const { data: game, error } = await supabase
  .from('games')
  .select('*')
  .eq('slug', slug)
  .single();

if (error) {
  console.error('Error fetching game:', error.message);
}
---

<BaseLayout title={`Edit ${game?.title || 'Game'}`}>
  <main class="max-w-2xl mx-auto px-4 py-10">
    <h1 class="text-3xl font-bold mb-6 text-center">Edit Game</h1>

    <div id="status-message" class="text-center mb-6 text-sm"></div>

    {game ? (
      <form id="edit-form" class="space-y-6">
        <input
          name="title"
          type="text"
          placeholder="Title"
          required
          value={game.title}
          class="w-full border rounded px-3 py-2"
        />
        <!-- Add more form fields like description, play time, etc here -->
        <button type="submit" class="w-full bg-primary text-white font-bold py-2 px-4 rounded hover:bg-primary-dark">
          Update Game
        </button>
      </form>
    ) : (
      <p class="text-center text-gray-500">Game not found.</p>
    )}
  </main>

  <script type="module">
    import { supabase } from "../../../lib/supabase";

    const form = document.getElementById('edit-form');
    const statusMessage = document.getElementById('status-message');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(form);

      const updatedGame = {
        title: formData.get('title'),
        // Add other fields here as needed
      };

      const slug = window.location.pathname.split("/").pop();

      const { error } = await supabase
        .from('games')
        .update(updatedGame)
        .eq('slug', slug);

      if (error) {
        console.error('Error updating game:', error);
        statusMessage.textContent = "❌ Error updating game. Check console.";
        statusMessage.classList.add('text-red-600');
        statusMessage.classList.remove('text-green-600');
      } else {
        statusMessage.textContent = "✅ Game updated successfully!";
        statusMessage.classList.add('text-green-600');
        statusMessage.classList.remove('text-red-600');
      }
    });
  </script>
</BaseLayout>
