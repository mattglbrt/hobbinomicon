---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { supabase } from "../../../lib/supabase";

export async function getStaticPaths() {
  const { data: games } = await supabase.from("games").select("slug");
  return games.map(game => ({ params: { slug: game.slug } }));
}

const { slug } = Astro.params;
const { data: game, error } = await supabase.from("games").select("*").eq("slug", slug).single();
let status = "";

async function handleSubmit(event) {
  event.preventDefault();
  const formData = new FormData(event.target);

  const updatedGame = {
    title: formData.get("title"),
    slug: formData.get("slug"),
    description: formData.get("description"),
    publication_year: formData.get("publication_year"),
    min_players: parseInt(formData.get("min_players")),
    max_players: parseInt(formData.get("max_players")),
    play_time: formData.get("play_time"),
    age_range: formData.get("age_range"),
    official_website: formData.get("official_website"),
    rules_url: formData.get("rules_url"),
    tags: formData.get("tags").split(",").map(tag => tag.trim()).filter(tag => tag),
  };

  const { error: updateError } = await supabase.from("games").update(updatedGame).eq("slug", slug);

  if (updateError) {
    status = "error";
    console.error(updateError);
  } else {
    await saveTags(updatedGame.tags);
    status = "success";
  }
}

async function saveTags(tagsArray) {
  if (!tagsArray || tagsArray.length === 0) return;

  for (const tag of tagsArray) {
    const slug = tag.toLowerCase().replace(/\s+/g, "-");
    await supabase.from("tags").upsert([{ name: tag, slug }], { onConflict: "slug" });
  }
}
---

<BaseLayout>
  <section class="max-w-3xl mx-auto py-12">
    <h1 class="text-3xl font-bold mb-6">Edit Game: {game?.title || "Unknown"}</h1>
    
    {game ? (
      <form on:submit={handleSubmit} class="space-y-6">
        <input type="text" name="title" value={game.title} required class="input" />
        <input type="text" name="slug" value={game.slug} required class="input" />
        <textarea name="description" class="input">{game.description}</textarea>
        <input type="number" name="publication_year" value={game.publication_year} class="input" />
        <input type="number" name="min_players" value={game.min_players} class="input" />
        <input type="number" name="max_players" value={game.max_players} class="input" />
        <input type="text" name="play_time" value={game.play_time} class="input" />
        <input type="text" name="age_range" value={game.age_range} class="input" />
        <input type="url" name="official_website" value={game.official_website} class="input" />
        <input type="url" name="rules_url" value={game.rules_url} class="input" />
        <input type="text" name="tags" value={game.tags.join(", ")} class="input" />

        <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded">Update Game</button>

        {status === "success" && <p class="text-green-600 mt-4">Game updated successfully!</p>}
        {status === "error" && <p class="text-red-600 mt-4">Error updating game.</p>}
      </form>
    ) : (
      <p>Game not found.</p>
    )}
  </section>
</BaseLayout>
